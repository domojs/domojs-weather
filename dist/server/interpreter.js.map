{"version":3,"sources":["../interpreter.ts"],"names":[],"mappings":"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","file":"interpreter.js","sourcesContent":["import * as di from 'akala-core';\r\nimport * as Sugar from 'sugar';\r\nimport { KeywordInterpreter, KeywordContext, Interpreter } from '../../../chat/dist/server/language';\r\nimport { Context } from '../../../chat-date';\r\nimport { Weather } from './service';\r\nimport './service';\r\nimport { Translator } from 'akala-server';\r\n\r\nexport type KeywordWithTimeContext = KeywordContext & Context;\r\n\r\n\r\nexport class WeatherInterpreter extends KeywordInterpreter\r\n{\r\n    constructor(private weather: Weather, private translate: Translator)\r\n    {\r\n        super();\r\n    }\r\n\r\n    actions = { \"which\": [\"quel\", \"quelle\"], \"is\": [\"est-ce\"] };\r\n    keywords = { \"temperature\": [\"temperature\"], \"rain\": [\"va y avoir de la pluie\", \"qu'il va pleuvoir\", \"qu'il pleut\"] };\r\n    others = { \"useless\": [\"est-il\", \"fait-il\", \"fera-t-il\"] };\r\n\r\n    public execute(context: KeywordWithTimeContext, next: (error?: any) => void, callback: (answer: string) => void)\r\n    {\r\n        switch (context.keyword)\r\n        {\r\n            case 'temperature':\r\n            case 'rain':\r\n                var dayOffset = (context.time && Sugar.Date.isValid(context.time) ? Sugar.Date.daysFromNow(context.time) + 1 : 0);\r\n                var self = this;\r\n                this.weather.forecast().then(function (data)\r\n                {\r\n                    var forecast;\r\n                    if (!isNaN(data) || !data || !data.forecast || !data.forecast.simpleforecast || !data.forecast.simpleforecast)\r\n                    {\r\n                        next(self.translate('connection issue'));\r\n                        return;\r\n                    }\r\n                    else if (typeof (dayOffset) != 'undefined')\r\n                        forecast = data.forecast.simpleforecast.forecastday[dayOffset];\r\n                    else\r\n                        forecast = data.forecast.simpleforecast.forecastday;\r\n                    switch (context.keyword)\r\n                    {\r\n                        case 'temperature':\r\n                            if (context.time && Sugar.Date.isFuture(context.time))\r\n                                callback(self.translate('il va faire entre {0}째 et {1}째', forecast.low.celsius, forecast.high.celsius));\r\n                            else\r\n                                callback(self.translate('il fait entre {0}째 et {1}째', forecast.low.celsius, forecast.high.celsius));\r\n                            break;\r\n                        case 'rain':\r\n                            if (context.action == 'is')\r\n                            {\r\n\r\n                            }\r\n                            break;\r\n                    }\r\n                }, function (error) { next(error); });\r\n                break;\r\n        }\r\n    }\r\n\r\n    public understand(context: KeywordWithTimeContext)\r\n    {\r\n        super.understand(context);\r\n        if (context.keyword)\r\n            context.deferred = false;\r\n    };\r\n}\r\n\r\n\r\n\r\ndi.injectWithName(['weather', 'translator'], function (weather: Weather, translator: Translator)\r\n{\r\n    new WeatherInterpreter(weather, translator).register();\r\n})();"],"sourceRoot":"weather/src/server"}