{"version":3,"sources":["../api/get.ts"],"names":[],"mappings":";AAAA,+BAAiC;AAKjC,EAAE,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,EAAE,UAAU,MAAuB;IAE5D,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,SAAS,CAAC,EAAE,UAAU,QAAQ,EAAE,OAAgB;QAExF,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC,CAAC,CAAC,CAAC;IACJ,MAAM,CAAC,GAAG,CAAC,kBAAkB,EAAE,EAAE,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,SAAS,CAAC,EAAE,UAAU,QAAQ,EAAE,OAAgB;QAEpG,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,UAAU,IAAI;YAExC,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,UAAU,EAAE,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC,CAAC;QACxG,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC,CAAC;IACJ,MAAM,CAAC,GAAG,CAAC,0BAA0B,EAAE,EAAE,CAAC,OAAO,CAAC,CAAC,kBAAkB,EAAE,WAAW,EAAE,SAAS,CAAC,EAAE,UAAU,SAAiB,EAAE,QAAQ,EAAE,OAAgB;QAEnJ,OAAO,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,UAAU,IAAI;YAElC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC;gBAC1G,QAAQ,CAAC,IAAI,CAAC,CAAC;YACnB,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,WAAW,CAAC;gBACvC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAA;YACjE,IAAI;gBACA,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,EAAE,CAAC","file":"get.js","sourcesContent":["import * as di from 'akala-core';\r\nimport * as express from 'express';\r\nimport { Weather } from '../service';\r\n\r\n\r\ndi.injectWithName(['$router'], function (router: express.IRouter)\r\n{\r\n    router.get('/api', di.command(['$callback', 'weather'], function (callback, weather: Weather)\r\n    {\r\n        return weather.getInfo();\r\n    }));\r\n    router.get('/api/temperature', di.command(['$callback', 'weather'], function (callback, weather: Weather)\r\n    {\r\n        return weather.getInfo().then(function (data)\r\n        {\r\n            callback({ celsius: data.current_observation.temp_c, fahrenheit: data.current_observation.temp_f });\r\n        });\r\n    }));\r\n    router.get('/api/forecast/:dayOffset', di.command(['params.dayOffset', '$callback', 'weather'], function (dayOffset: number, callback, weather: Weather)\r\n    {\r\n        weather.forecast().then(function (data)\r\n        {\r\n            if (!isNaN(data) || !data || !data.forecast || !data.forecast.simpleforecast || !data.forecast.simpleforecast)\r\n                callback(data);\r\n            else if (typeof (dayOffset) != 'undefined')\r\n                callback(data.forecast.simpleforecast.forecastday[dayOffset])\r\n            else\r\n                callback(data.forecast.simpleforecast.forecastday);\r\n        });\r\n    }));\r\n})();\r\n"],"sourceRoot":"weather/src/server"}